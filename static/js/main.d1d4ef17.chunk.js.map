{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","role","onClick","toggledarkmode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","placeholder","backgroundColor","newText","toUpperCase","toLowerCase","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","length","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d1d4ef17.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n// relace a=Link and href=to\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n        <div class={`spinner-border mx-3 text-${props.mode==='light'?'dark':'light'}`} role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggledarkmode} role=\"switch\" id=\"flexSwitchCheckDefault\" />  \r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'} mode</label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  )\r\n}\r\n","import React,{ useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUPclick = ()=>{\r\n        // console.log('Button was clicked' + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }    \r\n    const handleLDclick = ()=>{\r\n        // console.log('Button was clicked' + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    function handlecopyclick() {\r\n  \r\n        var copyText = document.getElementById(\"myBox\");\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n        navigator.clipboard.writeText(copyText.value);\r\n      }\r\n    const handleclearclick = ()=>{\r\n        var cleartext = document.getElementById(\"myBox\")\r\n        cleartext.value=\" \"\r\n    }\r\n    \r\n    const handleOnchange = (event)=>{\r\n        // console.log('Button was changed');\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    const pp = 'Entre yoUR Text here.'\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n            <div className=\"mx-7 my-2  \">\r\n            <h2>{props.heading}</h2>\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnchange} id=\"myBox\" rows=\"6\" placeholder={pp} style={{backgroundColor: props.mode==='light'?'white':'#737373',color: props.mode==='light'?'black':'white'}}></textarea>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUPclick}>Click to make UPPERCASE</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLDclick}>Click to make lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handlecopyclick}>Copy your Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleclearclick}>Clear</button>\r\n            </div>\r\n            <h3>Your text Summary</h3>\r\n            <p>Your text has {text.split(' ').length} words and {text.length} character.</p>\r\n            <p>Your text takes {0.008 * text.split(' ').length} minutes to read.</p>\r\n            <h3>Preview</h3>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","\r\nimport './App.css';\r\n// import About from './Components/About';\r\nimport Navbar from './Components/Navbar';\r\nimport TextForm from './Components/TextForm';\r\nimport React, { useState } from 'react';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Routes,\r\n//   Route,\r\n//   // Link\r\n// } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light') \r\n  const togglecolormode = ()=> {\r\n    if (mode === 'light') {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor='#4a4a4a ';\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor='white';\r\n \r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    {/* old method */}\r\n    {/* <Router>\r\n      <Navbar title='Text utils' mode={mode} toggledarkmode={togglecolormode} />\r\n      <Routes>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <TextForm heading=\"Welcome to Text Utils\" mode={mode} />\r\n          </Route>\r\n      </Routes>\r\n    </Router> */}\r\n  <Navbar title='Text utils' mode={mode} toggledarkmode={togglecolormode} />\r\n  <TextForm heading=\"Welcome to Text Utils\" mode={mode} />\r\n  {/* New method */}\r\n    {/* <Router>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<TextForm heading=\"Welcome to Text Utils\" mode={mode} />} />\r\n          <Route exact path=\"/about\" element={<About mode={mode}/>} />\r\n        </Routes>\r\n    </Router> */}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}